plugins {
    alias(libs.plugins.androidApplication)
}

// a wrapper closure around executing a string
// can take either a string or a list of strings (for arguments with spaces)
// prints all output, complains and halts on error
def runCommand = { strList ->
    assert ( strList instanceof String ||
            ( strList instanceof List && strList.each{ it instanceof String } ) \
)
    def proc = strList.execute()
    proc.in.eachLine { line -> println line }
    proc.out.close()
    proc.waitFor()

    print "[INFO] ( "
    if(strList instanceof List) {
        strList.each { print "${it} " }
    } else {
        print strList
    }
    println " )"

    if (proc.exitValue()) {
        println "gave the following error: "
        println "[ERROR] ${proc.getErrorStream()}"
    }
    assert !proc.exitValue()
}

android {

    def buildWeb = tasks.register('buildWeb', Copy) {
        group = 'Build'
        description = 'Builds the web side of the app and put it in the assets'
        println 'Building the web'
        runCommand("npm run build --prefix ${new File(rootDir, 'web/').getAbsolutePath()}")
    }
    preBuild.dependsOn buildWeb


    namespace 'com.ammar.sharing'
    compileSdk 34



    sourceSets {
        main.assets.srcDirs += new File(rootDir, "web/build").getAbsolutePath()
    }
    defaultConfig {
        applicationId "com.ammar.sharing"
        minSdk 21
        targetSdk 34
        versionCode 16
        versionName "v1.5.1"

        vectorDrawables.useSupportLibrary = true
        externalNativeBuild {
            cmake {
                abiFilters 'arm64-v8a' ,'armeabi-v7a', 'x86_64'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            vcsInfo.include false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        prefab true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/jni/CMakeLists.txt')
            version '3.22.1'
        }
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.constraintlayout // add this because we want negative margins
    implementation libs.recyclerview // when you add this recycler view width issue is fixed in dialogs
    implementation libs.swiperefreshlayout // needed to get CircularProgressDrawable
    implementation libs.material
    implementation libs.glide

    // I don't like the new library catalog declaration it makes you write more stuff :)
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
}
