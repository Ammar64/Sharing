plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
}

// a wrapper closure around executing a string
// can take either a string or a list of strings (for arguments with spaces)
// prints all output, complains and halts on error
def runCommand = { strList ->
    if( strList instanceof GString ) strList = strList.toString()
    assert ( strList instanceof String ||
            ( strList instanceof List && strList.each{ it instanceof String } ) \
)
    def proc = strList.execute()
    proc.in.eachLine { line -> println line }
    proc.out.close()
    proc.waitFor()

    print "[INFO] ( "
    if(strList instanceof List) {
        strList.each { print "${it} " }
    } else {
        print strList
    }
    println " )"

    if (proc.exitValue()) {
        println "gave the following error: "
        println "[ERROR] ${proc.getErrorStream()}"
    }
    assert !proc.exitValue()
}

android {
    def webDir = new File( rootDir, 'web' ).absolutePath
    def webBuildDir = new File( webDir, 'build' ).absolutePath

    def buildWeb = tasks.register('buildWeb', Copy) {
        group = 'Build'
        description = 'Builds the web side of the app and put it in the assets'
        println 'Building the web'
        runCommand("npm run build --prefix $webDir")
    }

    preBuild.dependsOn buildWeb
    namespace 'com.ammar.sharing'
    compileSdk 34

    sourceSets {
        main.assets.srcDirs += webBuildDir
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    defaultConfig {
        applicationId "com.ammar.sharing"
        minSdk 21
        targetSdk 34
        versionCode 24
        versionName "v1.5.5-alpha3"

        vectorDrawables.useSupportLibrary = true
        externalNativeBuild {
            cmake {
                abiFilters 'arm64-v8a' ,'armeabi-v7a', 'x86_64'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            vcsInfo.include false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        prefab true
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    externalNativeBuild {
        cmake {
            path file('src/main/jni/CMakeLists.txt')
            version '3.22.1'
        }
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation libs.core.ktx

    implementation libs.appcompat
    implementation libs.constraintlayout // add this because we want negative margins
    implementation libs.recyclerview // when you add this recycler view width issue is fixed in dialogs
    implementation libs.swiperefreshlayout // needed to get CircularProgressDrawable
    implementation libs.material
    implementation libs.glide

    // I don't like the new library catalog declaration it makes you write more stuff :)
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.hendrawd:StorageUtil:1.1.0'
    implementation 'io.getstream:stream-webrtc-android:1.3.8'

    implementation "androidx.navigation:navigation-fragment:2.9.1"
    implementation "androidx.navigation:navigation-ui:2.9.1"

    testImplementation "junit:junit:4.13.2"
}
